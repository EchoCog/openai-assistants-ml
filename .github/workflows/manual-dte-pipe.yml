# This is a basic workflow that is manually triggered

name: Manual Deep Tree Echo ML Pipeline

# Controls when the action will run. Workflow runs when manually triggered using the UI
# or API.
on:
  workflow_dispatch:


jobs:
  test-and-train:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@latest

    - name: Set up Python
      uses: actions/setup-python@latest
      with:
        python-version: '3.9'

    - name: Set up Node.js
      uses: actions/setup-node@latest
      with:
        node-version: '18'

    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install reservoirpy numpy pytest

    - name: Install Node.js dependencies
      run: |
        npm install
        npm install numpy-ts

    - name: Run tests
      run: |
        npm test -- app/deep-tree-echo

    - name: Train base model
      if: github.event_name == 'push' && github.ref == 'refs/heads/main'
      run: |
        python scripts/train_reservoir.py
      env:
        MODEL_ARTIFACTS_PATH: ./models

    - name: Upload model artifacts
      if: success() && github.event_name == 'push' && github.ref == 'refs/heads/main'
      uses: actions/upload-artifact@latest
      with:
        name: model-artifacts
        path: ./models

  optimize-and-deploy:
    needs: test-and-train
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@latest

    - name: Download model artifacts
      uses: actions/download-artifact@latest
      with:
        name: model-artifacts
        path: ./models

    - name: Set up Python
      uses: actions/setup-python@latest
      with:
        python-version: '3.9'

    - name: Install optimization dependencies
      run: |
        pip install reservoirpy numpy optuna

    - name: Run hyperparameter optimization
      run: |
        python scripts/optimize_reservoir.py
      env:
        OPTUNA_STORAGE: sqlite:///models/optuna.db

    - name: Update deployment configuration
      run: |
        python scripts/update_config.py
      env:
        MODEL_CONFIG_PATH: ./app/deep-tree-echo/config.json

    - name: Deploy updated model
      if: success()
      run: |
        # Add deployment steps here
        echo "Model deployed successfully" 
        
